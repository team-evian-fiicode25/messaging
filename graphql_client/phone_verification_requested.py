# Generated by ariadne-codegen
# Source: queries.graphql

from typing import Literal, Optional

from pydantic import Field

from .base_model import BaseModel


class PhoneVerificationRequested(BaseModel):
    login: "PhoneVerificationRequestedLogin"


class PhoneVerificationRequestedLogin(BaseModel):
    typename__: Literal["IQueryableLogin", "QueryableLogin"] = Field(alias="__typename")
    username: Optional[str]
    phone_number: Optional["PhoneVerificationRequestedLoginPhoneNumber"] = Field(
        alias="phoneNumber"
    )


class PhoneVerificationRequestedLoginPhoneNumber(BaseModel):
    typename__: Literal["IQueryablePhoneNumber", "QueryablePhoneNumber"] = Field(
        alias="__typename"
    )
    number: str
    verify_code: Optional[str] = Field(alias="verifyCode")


PhoneVerificationRequested.model_rebuild()
PhoneVerificationRequestedLogin.model_rebuild()
